
# Copyright (c) 2005-2010, 2012-2013, Andrew Hang Chen and contributors,
# All rights reserved.
# Licensed under the 3-clause BSD license.

require 'rake/clean'
require 'rubygems'
require 'fruit_processor'

include Rake::DSL if defined?(Rake::DSL)

load 'rake_base.rb'
include RakeBase

load 'rake_base_deps.rb'
include RakeBaseDeps

$base_dir=Dir.pwd
$build_dir = "#{$base_dir}/build"

task :default => [
  :ruby_test, :rake_base_deps_test, :rake_estimate_test,
  :in_3_minutes,
  :sample_selective,
  :sample_selective_main,
  :sample_build_dir,
  :sample_multi_dir,
  :anchor_root, :dirs, :compile, :sample, 
  :coverage, 
  :self_test]

# :test is not included because :self_test covers tests done in :test.
# :sample_single_dir is not included
#    because fortran compiler must recognize .f95 extension.

if ENV['DISPLAY']
  begin
    require 'tk'
    task :default => [ :gui_fruit_test ]
  rescue LoadError
    puts "failed to require 'tk'"
  end
end

CLEAN.include(FileList[
  '**/*.o', '**/*.obj', '**/*.mod', '**/*.a', '**/*_gen.f90', '**/*fruit_driver',
  '**/result*.xml',
  '**/fruit_driver_fxx.exe',
  '**/fruit_driver.exe',
  '**/rakefile_gui_tmp',
  '**/rakefile_gui_tester',
  '**/rakefile_gui_src',
  '**/fruit_driver_gui.exe',
  '**/fruit_driver_3min.exe',
  '**/fruit_driver_3min',
  'sample_selective/fruit_driver_selective',
  'sample_selective/dummy_main',
  'sample_selective/dummy_main.exe',
  'sample_build_dir/*/*.exe',
  'self_test/fruit_self_test_driver',
  'self_test/override_stdout.txt',
  'fruit_processor_gem/pkg/fruit_processor-*/',
  '**/*.gcda', '**/*.gcno', '**/*.gcov', 
])

[
  "in_3_minutes", "sample/test",
  "sample", "sample_single_dir", "sample_selective", "sample_build_dir",
  "self_test"
].each do |d|
  CLEAN.include(FileList[d + "/fruit.f90"])
  CLEAN.include(FileList[d + "/fruit_util.f90"])
  CLEAN.include(FileList[d + "/rake_base_deps.rb"])
  CLEAN.include(FileList[d + "/rake_estimate.rb"])
end

CLOBBER.include(FileList['src/fruit.f90'])
CLOBBER.include($build_dir)

desc "Complie src/fruit*.f90 and build build/libfruit.a"
task :compile do
  if $ar_ok
    Dir.chdir("src") do
      sh 'rake'
    end
  end
end

desc "(Obsolete) Test of fruit.f90 and fruit_util.f90."
task :test => :compile do
  Dir.chdir("test") do
    sh 'rake'
  end
  driver_programs = FileList["#{$build_dir}/fruit_driver"]
  driver_programs.each do |driver|
    sh "\"#{driver}\""
  end
end

desc "Update fruit.f90"
task :fruit_f90 do
  Dir.chdir("src") do
    sh 'rake fruit.f90'
  end
end

desc "Self test of fruit.f90 and fruit_util.f90."
task :self_test => :fruit_f90 do
  Dir.chdir("self_test") do
    sh 'rake coverage'
  end
end

desc "Using valgrind do Self test of fruit.f90 and fruit_util.f90."
task :self_test_valgrind => :fruit_f90 do
  Dir.chdir("self_test") do
    sh 'rake valgrind'
  end
end

desc "Test of fruit_processor.rb."
task :ruby_test do
  Dir.chdir("fruit_processor_gem") do
    sh 'rake test'
  end
end

desc "Test of rake_base_deps.rb"
task :rake_base_deps_test do
  Dir.chdir("ruby_test") do
    sh 'ruby rake_base_deps_test.rb'
  end
end

desc "Test of rake_estimate.rb"
task :rake_estimate_test do
  Dir.chdir("ruby_test") do
    sh 'ruby rake_estimate_test.rb'
  end
end

desc "Test of gui_fruit.rb"
task :gui_fruit_test do
  Dir.chdir("ruby_test") do
    sh 'ruby gui_fruit_test.rb'
  end
end


desc "Compile a sample of multi-directry test."
task :sample => :compile do
  Dir.chdir("sample") do
    sh 'rake'
  end
end

desc "Compile a sample of manually written test."
task :in_3_minutes => :fruit_f90 do
  Dir.chdir("in_3_minutes") do
    sh 'rake'
  end
end

desc "Compile a sample of single-directry test."
task :sample_single_dir => :fruit_f90 do
  dir = "sample_single_dir"
  Dir.chdir(dir) do
    os_install("../src/fruit.f90",      "fruit.f90")
    os_install("../src/fruit_util.f90", "fruit_util.f90")
    sh "rake"
  end
end

desc "Compile a sample of multi-directry test."
task :sample_multi_dir => :fruit_f90 do
  dir = "sample_multi_dir/build"
  Dir.chdir(dir) do
    sh "rake"
  end
  dir = "sample_multi_dir/build_selective"
  Dir.chdir(dir) do
    sh "rake"
  end
end


desc "coverage (only for gfortran)"
task :coverage => [:fruit_f90, :compile] do
  if $gcov
    dir = "sample_multi_dir/build"
    Dir.chdir(dir) do
      sh "rake coverage"
    end

    Dir.chdir("sample_build_dir") do
      sh "rake coverage"
    end

    Dir.chdir("sample_selective") do
      os_install("../src/fruit.f90",      "fruit.f90")
      os_install("../src/fruit_util.f90", "fruit_util.f90")
      sh "rake coverage"
    end
  end
end


desc "Compile a sample which complies only specifiled testerss."
task :sample_selective => :fruit_f90 do
  Dir.chdir("sample_selective") do
    os_install("../src/fruit.f90",      "fruit.f90")
    os_install("../src/fruit_util.f90", "fruit_util.f90")
    sh "rake"
  end
end

desc "Compile usual program (not unit test) using rake_estimate.rb"
task :sample_selective_main do
  Dir.chdir("sample_selective") do
    sh "rake -f rakefile_main"
  end
end

desc "Compile a sample whose build directry is a subdirectry"
task :sample_build_dir => :fruit_f90 do
  Dir.chdir("sample_build_dir") do
    sh "rake"
  end
end

load 'rake_base_deps.rb'
include RakeBaseDeps
